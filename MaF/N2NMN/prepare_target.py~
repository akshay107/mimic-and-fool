from resnet152 import ResNet152
from keras.models import Model
from keras.preprocessing import image
from keras.applications.imagenet_utils import preprocess_input
import numpy as np
import time
import os
import glob
model = ResNet152(include_top=False, weights='imagenet')
    
'''img_path = 'elephant.jpg'
img = image.load_img(img_path, target_size=(448, 448))
x = image.img_to_array(img)
x = np.expand_dims(x, axis=0)
x = preprocess_input(x)
print(x.shape)
x = np.tile(x,(2048,1,1,1))
print(x.shape)
t1 = time.time()
#model.summary()
intermediate_model = Model(inputs=model.input,outputs=model.layers[-3].output)
features = intermediate_model.predict(x,batch_size=64)
t2 = time.time() 
print(features.shape)
print(t2-t1)

intermediate_model = Model(inputs=model.input,outputs=model.layers[-3].output)

t1 = time.time()
for i in range(1000):
	img_path = 'elephant.jpg'
	img = image.load_img(img_path, target_size=(448, 448))
	x = image.img_to_array(img)
	x = np.expand_dims(x, axis=0)
	x = preprocess_input(x)
	features = intermediate_model.predict(x)
        np.save('feature%d.npy'% i, features)

t2 = time.time()
print(t2-t1)'''

intermediate_model = Model(inputs=model.input,outputs=model.layers[-3].output)

image_dir = '/home/cvpr/Debleena/n2nmn-master/VQA/test2015'
feats_dir = '/home/cvpr/Debleena/n2nmn-master/exp_vqa/data/resnet_res5c/test2015'

os.makedirs(feats_dir)

imgs = glob.glob(image_dir+"/*.jpg")

print(len(imgs))
for i in range(len(imgs)):
	img = image.load_img(imgs[i], target_size=(448, 448))
	x = image.img_to_array(img)
	x = np.expand_dims(x, axis=0)
	x = preprocess_input(x)
	features = intermediate_model.predict(x)
        feat_path = feats_dir + "/" + imgs[i].split("/")[-1].replace("jpg","npy")
        np.save(feat_path, features)
        if i%1000==0:
		print(i,imgs[i],feat_path)

